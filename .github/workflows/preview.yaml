name: Ephemeral Preview Environment

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed, labeled, unlabeled ]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Print debug info
        run: |
          echo "Action: ${{ github.event.action }}"
          echo "Labels: ${{ toJSON(github.event.pull_request.labels.*.name) }}"
          echo "Author Association: ${{ github.event.pull_request.author_association }}"
          echo "Repo Full Name: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "Base Repo: ${{ github.repository }}"

  laravel-tests:
    uses: ./.github/workflows/reusable-ci.yaml
    if: |
      (
        contains(vars.ALLOWED_AUTHOR_ASSOCIATIONS, github.event.pull_request.author_association)
      )
      && (
        contains(github.event.pull_request.labels.*.name, vars.DEPLOY_PREVIEW_LABEL)
      )
      && (
        github.event.pull_request.head.repo.full_name == github.repository
      )
      && (
        github.event.action != 'closed'
      )
    secrets:
      APP_KEY_CI: ${{ secrets.APP_KEY_CI }}

  build-image:
    uses: ./.github/workflows/reusable-build-preview.yaml
    needs: [ laravel-tests ]
    with:
      pr_number: ${{ github.event.pull_request.number }}
      project_name: ${{ vars.PROJECT_NAME }}
      label_preview: ${{ vars.LABEL_PREVIEW }}
      commit_sha: ${{ github.event.pull_request.head.sha }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [ laravel-tests, build-image ]
    environment:
      name: Preview
    permissions:
      pull-requests: write
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            REPO_FULL_NAME=${{ github.repository }}
            export PR_NUMBER=${{ env.PR_NUMBER }}
            export COMMIT_SHA=${{ github.event.pull_request.head.sha }}
            export PROJECT_NAME=${{ vars.PROJECT_NAME }}
            export IMAGE_TAG=pr-${{ env.PR_NUMBER }}
            export PROJECT_DIR=/var/www/$PROJECT_NAME/previews/pr-${{ env.PR_NUMBER }}
            export FIRST_TIME=false
            
            if [ ! -d "$PROJECT_DIR" ]; then
              export FIRST_TIME=true
              echo "Cloning repository for the first time at ${PROJECT_DIR}..."
              git clone "git@github.com:${REPO_FULL_NAME}.git" "${PROJECT_DIR}"
            fi
            
            cd "${PROJECT_DIR}"
            
            git fetch origin
            git checkout "${COMMIT_SHA}"
            
            bash $PROJECT_DIR/deploy/preview/deploy-preview.sh

      - name: Post Preview URL to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ env.PR_NUMBER }}
          header: preview-url
          message: |
            âœ… **Preview ready!**
            Access it at: https://${{ vars.PROJECT_NAME }}-pr-${{ env.PR_NUMBER }}.preview.carlosalexandre.com.br

            > Image: `${{ github.repository }}:pr-${{ env.PR_NUMBER }}`

  destroy-preview:
    runs-on: ubuntu-latest
    if: |
      (
        contains(vars.ALLOWED_AUTHOR_ASSOCIATIONS, github.event.pull_request.author_association)
      )
      && (
        github.event.pull_request.head.repo.full_name == github.repository
      )
      && (
        github.event.action == 'closed'
        || (github.event.action == 'unlabeled' && github.event.label.name == vars.DEPLOY_PREVIEW_LABEL)
      )
    environment:
      name: Preview
    steps:
      - name: Destroy Environment on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export PR_NUMBER=${{ env.PR_NUMBER }}
            export PROJECT_NAME=${{ vars.PROJECT_NAME }}
            export PROJECT_DIR=/var/www/$PROJECT_NAME/previews/pr-${{ env.PR_NUMBER }}
            
            if [ -d "$PROJECT_DIR" ]; then
              cat $PROJECT_DIR/deploy/preview/destroy-preview.sh | bash -s
            else
              echo "Project directory not found. Nothing to do."
            fi

      - name: Install and Login to regctl
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 -o /usr/local/bin/regctl
          chmod +x /usr/local/bin/regctl
          regctl registry login docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Delete PR-prefixed tag from Docker Hub
        run: |
          REPO="docker.io/${{ github.repository }}"
          PR_TAG="pr-${{ env.PR_NUMBER }}"
          echo "Removing PR tag: ${PR_TAG}"
          regctl tag rm "${REPO}:${PR_TAG}" || echo "Tag ${PR_TAG} not found."
